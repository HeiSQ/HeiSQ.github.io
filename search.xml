<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RabbitMQ消息队列_从入门到精通——RabbitMQ的安装与启动</title>
      <link href="/posts/cf7e4c96.html"/>
      <url>/posts/cf7e4c96.html</url>
      
        <content type="html"><![CDATA[<h1 id="第1章-RabbitMQ安装"><a href="#第1章-RabbitMQ安装" class="headerlink" title="第1章 RabbitMQ安装"></a>第1章 RabbitMQ安装</h1><p>一般来说安装RabbitMQ之前要安装Erlang，可以去Erlang官网下载。<br>接着去RabbitMQ官网下载安装包，之后解压缩即可。<br>Erlang官方下载地址：<a href="https://www.erlang.org/downloads" target="_blank" rel="noopener">https://www.erlang.org/downloads</a><br>RabbitMQ官方下载地址：<a href="https://www.rabbitmq.com/download.html" target="_blank" rel="noopener">https://www.rabbitmq.com/download.html</a><br>不方便去官网下载的可以去<a href="https://pan.baidu.com/s/1fg7XIySTHpL1KltmJ-Wjjg" target="_blank" rel="noopener">百度网盘下载</a>  提取码：cweu<br><img src="https://img-blog.csdnimg.cn/20200327202438625.png" alt="在这里插入图片描述"></p><h2 id="1-1-安装前的准备"><a href="#1-1-安装前的准备" class="headerlink" title="1.1 安装前的准备"></a>1.1 安装前的准备</h2><h3 id="1-1-1-依赖包安装"><a href="#1-1-1-依赖包安装" class="headerlink" title="1.1.1 依赖包安装"></a>1.1.1 依赖包安装</h3><p>安装RabbitMQ之前必须要先安装所需要的依赖包，可以使用下面的一次性安装命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc glibc-devel make ncurses-devel openssl-devel xmlto</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="1-1-2安装Erlang"><a href="#1-1-2安装Erlang" class="headerlink" title="1.1.2安装Erlang"></a>1.1.2安装Erlang</h3><ol><li>手动在Linux的/usr/local目录下创建Erlang的安装目录</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/local/erlang</span><br></pre></td></tr></table></figure><ol start="2"><li>将Erlang源代码包otp_src_19.3.tar.gz上传到/usr/local/erlang目录下</li><li>解压erlang 源码包<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf otp_src_19<span class="number">.3</span>.tar.gz</span><br></pre></td></tr></table></figure></li><li>进入erlang的解压目录</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd otp_src_19<span class="number">.3</span></span><br></pre></td></tr></table></figure><ol start="5"><li>配置erlang的安装信息</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/erlang --without-javac</span><br></pre></td></tr></table></figure><ol start="6"><li>编译并安装</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ol start="7"><li>配置环境变量</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><ol start="8"><li>将这些配置填写到profile文件的最后</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ERL_HOME=/usr/local/erlang</span><br><span class="line">PATH=$ERL_HOME/bin:$PATH</span><br><span class="line">export ERL_HOME PATH</span><br></pre></td></tr></table></figure><ol start="9"><li>启动环境变量配置文件(启动后不会有提示)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="1-2-安装RabbitMQ"><a href="#1-2-安装RabbitMQ" class="headerlink" title="1.2 安装RabbitMQ"></a>1.2 安装RabbitMQ</h2><ol><li>将RabbitMQ安装包安装包rabbitmq-server-3.7.2-1.el7.noarch.rpm 上传到/home目录</li><li>安装RabbitMQ</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh --nodeps rabbitmq-server-<span class="number">3.7</span><span class="number">.2</span>-<span class="number">1</span>.el7.noarch.rpm</span><br></pre></td></tr></table></figure><h2 id="1-3-Rabbit常用命令"><a href="#1-3-Rabbit常用命令" class="headerlink" title="1.3 Rabbit常用命令"></a>1.3 Rabbit常用命令</h2><h3 id="1-3-1-启动和关闭"><a href="#1-3-1-启动和关闭" class="headerlink" title="1.3.1 启动和关闭"></a>1.3.1 启动和关闭</h3><ol><li>启动RabbitMQ</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-server start &amp;</span><br></pre></td></tr></table></figure><blockquote><p>注意：这里可能会出现错误，错误原因是/var/lib/rabbitmq/.erlang.cookie文件权限不够。 解决方案对这个文件授权<br>chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie chmod 400<br>/var/lib/rabbitmq/.erlang.cookie</p></blockquote><ol start="2"><li>停止服务</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl stop</span><br></pre></td></tr></table></figure><h3 id="1-3-2-插件管理"><a href="#1-3-2-插件管理" class="headerlink" title="1.3.2 插件管理"></a>1.3.2 插件管理</h3><ol><li>添加插件<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins enable &#123;插件名&#125;</span><br></pre></td></tr></table></figure></li><li>删除插件</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins disable &#123;插件名&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>注意：RabbitMQ启动以后可以使用浏览器进入管控台但是默认情况RabbitMQ不允许直接使用浏览器浏览器进行访问因此必须添加插件</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure></li><li>使用浏览器访问管控台<a href="http://RabbitMQ服务器IP:15672" target="_blank" rel="noopener">http://RabbitMQ服务器IP:15672</a></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//172.16.188.133:15672</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020032720053355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlaVNR,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="1-3-3-用户管理"><a href="#1-3-3-用户管理" class="headerlink" title="1.3.3 用户管理"></a>1.3.3 用户管理</h3><p>RabbitMQ安装成功后使用默认用户名guest登录</p><blockquote><p>账号：guest<br>密码：guest</p></blockquote><p><em>注意：这里guest只允许本机登录访问需要创建用户并授权远程访问命令如下</em> </p><ol><li>添加用户：<code>rabbitmqctl add_user {username} {password}</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl add_user root root</span><br></pre></td></tr></table></figure><ol start="2"><li>删除用户：<code>rabbitmqctl delete_user {username}</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl delete_user root</span><br></pre></td></tr></table></figure><ol start="3"><li>修改密码：<code>rabbitmqctl change_password {username} {newpassword}</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl change_password root <span class="number">123456</span></span><br></pre></td></tr></table></figure><ol start="4"><li>设置用户角色：<code>rabbitmqctl set_user_tags {username} {tag}</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl set_user_tags root administrator</span><br></pre></td></tr></table></figure><p>tag参数表示用户角色取值为：<code>management ，monitoring ，policymaker  administrator</code><br>各角色详解：  </p><ul><li><code>management</code><ul><li>用户可以通过AMQP做的任何事外加： </li><li>列出自己可以通过AMQP登入的virtual hosts  </li><li>查看自己的virtual hosts中的queues, exchanges 和 bindings </li><li>查看和关闭自己的channels 和 connections </li><li>查看有关自己的virtual hosts的“全局”的统计信息，包含其他用户在这些virtual<br>hosts中的活动。</li></ul></li><li><code>policymaker</code><ul><li><code>management</code><ul><li>可以做的任何事外加：</li><li>查看、创建和删除自己的virtual hosts所属的policies和parameters</li></ul></li></ul></li><li><code>monitoring</code><ul><li><code>management</code></li><li>可以做的任何事外加： </li><li>列出所有virtual hosts，包括他们不能登录的virtual hosts </li><li>查看其他用户的connections和channels </li><li>查看节点级别的数据如clustering和memory使用情况</li><li>查看真正的关于所有virtual hosts的全局的统计信息</li></ul></li><li><code>administrator</code><ul><li><code>policymaker</code>和<code>monitoring</code>可以做的任何事外加: </li><li>创建和删除virtual hosts</li><li>查看、创建和删除users </li><li>查看创建和删除permissions </li><li>关闭其他用户的connections</li></ul></li></ul><p><img src="https://img-blog.csdnimg.cn/20200327202540959.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlaVNR,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="1-3-4-权限管理"><a href="#1-3-4-权限管理" class="headerlink" title="1.3.4 权限管理"></a>1.3.4 权限管理</h3><ol><li>授权命令：<code>rabbitmqctl set_permissions [-p vhostpath] {user} {conf} {write} {read}</code></li></ol><p>-p vhostpath ：用于指定一个资源的命名空间，例如 –p / 表示根路径命名空间<br>user：用于指定要为哪个用户授权填写用户名<br>     conf:一个正则表达式match哪些配置资源能够被该用户配置。<br>       write:一个正则表达式match哪些配置资源能够被该用户读。<br>       read:一个正则表达式match哪些配置资源能够被该用户访问。<br>   例如：<br><code>rabbitmqctl set_permissions -p / root &#39;.*&#39; &#39;.*&#39; &#39;.*&#39;</code><br>   用于设置root用户拥有对所有资源的 读写配置权限<br>2. 查看用户权限 <code>rabbitmqctl  list_permissions [vhostpath]</code><br>例如<br>  查看根径经下的所有用户权限<br>  <code>rabbitmqctl  list_permissions</code><br>  查看指定命名空间下的所有用户权限<br> <code>rabbitmqctl  list_permissions /abc</code><br>3. 查看指定用户下的权限<code>rabbitmqctl  list_user_permissions {username}</code><br>例如<br>  查看root用户下的权限<br> <code>rabbitmqctl  list_user_permissions root</code><br>4. 清除用户权限<code>rabbitmqctl  clear_permissions {username}</code><br>例如：<br>    清除root用户的权限<br><code>rabbitmqctl  clear_permissions root</code></p><h3 id="1-3-5-vhost管理"><a href="#1-3-5-vhost管理" class="headerlink" title="1.3.5 vhost管理"></a>1.3.5 vhost管理</h3><p> vhost是RabbitMQ中的一个命名空间，可以限制消息的存放位置利用这个命名空间可以进行权限的控制有点类似Windows中的文件夹一样，在不同的文件夹中存放不同的文件。</p><ol><li>添加vhost: rabbitmqctl add vhost {name}<br>例如<br><code>rabbitmqctl add vhost bjpowernode</code></li><li>删除vhost：rabbitmqctl delete vhost {name}<br>例如<br> <code>rabbitmqctl delete vhost bjpowernode</code></li></ol><blockquote><p>至此，以上便是-RabbitMQ消息队列|从入门到精通——RabbitMQ的安装与启动-的全部内容<br>我是石乔，一个尚在努力着的Java程序员<br>愿我的文章可以帮助到你，共同努力，加油！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>springboot项目打成war包并部署到Linux的Tomcat中</title>
      <link href="/posts/9da0efe6.html"/>
      <url>/posts/9da0efe6.html</url>
      
        <content type="html"><![CDATA[<h2 id="启动类继承SpringBootServletInitializer"><a href="#启动类继承SpringBootServletInitializer" class="headerlink" title="启动类继承SpringBootServletInitializer"></a>启动类继承<code>SpringBootServletInitializer</code></h2><ol><li><p>打开你的Application启动类</p></li><li><p>在类目后面继承 SpringBootServletInitializer</p></li><li><p>并重写 configure 方法<br><img src="https://img-blog.csdnimg.cn/20200317142044857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlaVNR,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="pom文件添加-lt-packaging-gt-war-lt-packaging-gt"><a href="#pom文件添加-lt-packaging-gt-war-lt-packaging-gt" class="headerlink" title="pom文件添加&lt; packaging&gt;war&lt; /packaging&gt;"></a>pom文件添加<code>&lt; packaging&gt;war&lt; /packaging&gt;</code></h2></li><li><p>打开你的pom.xml，添加下面的标签</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;packaging&gt;war&lt;/packaging&gt;</span><br></pre></td></tr></table></figure><a id="more"></a></li></ol><h2 id="mvn命令操作（clean、install）"><a href="#mvn命令操作（clean、install）" class="headerlink" title="mvn命令操作（clean、install）"></a>mvn命令操作（clean、install）</h2><ol start="6"><li>第五条步骤执行好后，先clean一下当前项目，之后再执行install</li><li>执行完成后 下方会提示是否成功  箭头所指位置如果提示 SUCCESS 即为打包成功</li><li>打包好的war包会存放到项目的target目录<br><img src="https://img-blog.csdnimg.cn/20200317143342319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlaVNR,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><h2 id="打好的war包部署到Linux的Tomcat中"><a href="#打好的war包部署到Linux的Tomcat中" class="headerlink" title="打好的war包部署到Linux的Tomcat中"></a>打好的war包部署到Linux的Tomcat中</h2><ol><li>连接好Linux后进入Tomcat的webapps目录中</li><li>将war包上传进/webapps/中</li><li>上传完进入Tomcat的bin目录</li><li>执行下面命令启动Tomcat</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./startup.sh | tail -f ../logs/catalina.out &amp;</span><br></pre></td></tr></table></figure><h2 id="本地访问部署好的项目"><a href="#本地访问部署好的项目" class="headerlink" title="本地访问部署好的项目"></a>本地访问部署好的项目</h2><ol><li>在本地浏览器访问Linux中部署的项目： </li><li>格式：Linux的ip：Tomcat端口号/web文件夹名</li><li>例如：<a href="http://172.16.1XX.XX3:8082/p2p-web/index" target="_blank" rel="noopener">http://172.16.1XX.XX3:8082/p2p-web/index</a><br><img src="https://img-blog.csdnimg.cn/20200317151119854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hlaVNR,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前言</title>
      <link href="/posts/7819a34e.html"/>
      <url>/posts/7819a34e.html</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><h2>你好，来访者</h2><h2>这是一篇测试文章</h2><h2>内容有待填充</h2><h2>精彩文章，敬请期待</h2><img src="/posts/7819a34e/heibai.jpg" class="" title="This is an image">]]></content>
      
      
      <categories>
          
          <category> 闲杂文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前言 </tag>
            
            <tag> 你好，来访者 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/posts/5c2fafc7.html"/>
      <url>/posts/5c2fafc7.html</url>
      
        <content type="html"><![CDATA[<h2>你好,这是测试文章</h2><h2>时间：下午03:18</h2>]]></content>
      
      
      <categories>
          
          <category> 闲杂文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 你好 </tag>
            
            <tag> 来访者 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
